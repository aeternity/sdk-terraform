#cloud-config

repo_update: true
repo_upgrade: all

fqdn: ${hostname}
manage_etc_hosts: true

runcmd:
  - yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional
  - yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
  - yum-config-manager --add-repo https://pkg.jenkins.io/redhat/jenkins.repo
  - rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
  - yum install -y zsh httpd awscli
  - yum install -y nfs-utils
  - echo '${efs}:/ /var/lib/jenkins nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0' >> /etc/fstab
  - |
    mkfs.btrfs -L data /dev/xvdb ||:
  - mount -L data /mnt
  - btrfs subvolume create /mnt/jenkins
  - btrfs subvolume create /mnt/docker
  - umount /mnt
  - mkdir -p /var/lib/docker
  - echo 'LABEL=data                                /var/lib/docker         btrfs   subvol=docker   0 0' >> /etc/fstab
  - echo 'LABEL=data                             /var/lib/jenkins/workspace btrfs   subvol=jenkins  0 1' >> /etc/fstab
  - mount /var/lib/docker
  - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  - rpm --import https://download.docker.com/linux/centos/gpg
  - yum install -y docker-ce
  - systemctl enable docker
  - systemctl start docker
  - yum install -y java-1.8.0-openjdk-headless dejavu-sans-fonts fontconfig jenkins
  - usermod -a -G docker jenkins
  - mount /var/lib/jenkins
  - mkdir -p /var/lib/jenkins/workspace
  - mount /var/lib/jenkins/workspace
  - chown -R 'jenkins:' /var/lib/jenkins
  - systemctl enable jenkins
  - systemctl start jenkins
  - echo 'IncludeOptional conf.d/sites/*.conf' >> /etc/httpd/conf/httpd.conf
  - aws s3 cp ${jenkins_config} /tmp/setup.sh
  - bash /tmp/setup.sh
  - aws s3 cp ${sdk_testnet_config} /tmp/setup.sh
  - bash /tmp/setup.sh
  - setsebool -P httpd_can_network_connect true
  - yum install -y git
  # docker-compose from RHEL is too old (pre API version 3)
  - curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` -o /usr/bin/docker-compose
  - chmod +x /usr/bin/docker-compose

output: { all: "| tee -a /var/log/cloud-init-output.log" }
